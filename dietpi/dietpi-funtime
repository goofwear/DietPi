#!/bin/bash
{
	#////////////////////////////////////
	# DietPi funtime Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Does absolutetly nothing useful, except:
	# - LOOKS COOL!
	#
	# Usage:
	# - Called from bordum, or, /DietPi/dietpi/dietpi-funtime iMODE
	#////////////////////////////////////

	#Force en_GB Locale for whole script. Prevents incorrect parsing with non-english locales.
	LANG=en_GB.UTF-8

	#Ensure we are in users home dir: https://github.com/Fourdee/DietPi/issues/905#issuecomment-298223705
	cd "$HOME"

	INPUT=0
	if [[ $1 =~ ^-?[0-9]+$ ]]; then
		INPUT=$1
	fi

	#/////////////////////////////////////////////////////////////////////////////////////
	#Funtime_0 processing
	#/////////////////////////////////////////////////////////////////////////////////////

	Funtime_0(){

		local MAX_COUNT=28
		((MAX_COUNT--))

		#local count=$MAX_COUNT
		#local mode=1
		#local MAX_PASSES=3
		local count=0
		local mode=0
		local MAX_PASSES=2

		local passes=0

		local marker=(

			'#               processing | D i e t  P i             #'
			'D#              processing | D i e t  P i            #g'
			'D #             processing | D i e t  P i           #ng'
			'D i#            processing | D i e t  P i          #ing'
			'D i #           processing | D i e t  P i         #sing'
			'D i e#          processing | D i e t  P i        #ssing'
			'D i e #         processing | D i e t  P i       #essing'
			'D i e t#        processing | D i e t  P i      #cessing'
			'D i e t #       processing | D i e t  P i     #ocessing'
			'D i e t  #      processing | D i e t  P i    #rocessing'
			'D i e t  P#     processing | D i e t  P i   #processing'
			'D i e t  P #    processing | D i e t  P i  # processing'
			'D i e t  P i#   processing | D i e t  P i #  processing'
			'D i e t  P i #  processing | D i e t  P i#   processing'
			'D i e t  P i  # processing | D i e t  P #    processing'
			'D i e t  P i   #processing | D i e t  P#     processing'
			'D i e t  P i    #rocessing | D i e t  #      processing'
			'D i e t  P i     #ocessing | D i e t #       processing'
			'D i e t  P i      #cessing | D i e t#        processing'
			'D i e t  P i       #essing | D i e #         processing'
			'D i e t  P i        #ssing | D i e#          processing'
			'D i e t  P i         #sing | D i #           processing'
			'D i e t  P i          #ing | D i#            processing'
			'D i e t  P i           #ng | D #             processing'
			'D i e t  P i            #g | D#              processing'
			'D i e t  P i             # | #               processing'
			'D i e t  P i              #|#                processing'
			'D i e t  P i               #                 processing'

		)

		while (( $passes < $MAX_PASSES ))
		do
			if (( $mode == 0 )); then
				((count++))
				if (( $count >= $MAX_COUNT )); then
					count=$MAX_COUNT
					mode=1
					((passes++))
				fi
			elif (( $mode == 1 )); then
				((count--))
				if (( $count <= 0 )); then
					count=0
					mode=0
					((passes++))
				fi
			fi

			#color=$((228 + $count))
			color=154

			#echo -ne "${marker[$count]}\r"

			echo -ne "\e[38;5;${color}m ${marker[$count]}\r"
			#echo -e "\e[38;5;${color}m ${marker[$count]}\r"

			#echo -e "\e[38;5;154m ${marker[$count]}\r"

			#fSleep="0.0$count"
			local fSleep=0.03
			sleep "$fSleep"

		done

		unset marker

	}

	Funtime_1(){
		local count=0
		local mode=0

		local passes=0
		local MAX_PASSES=4

		local MAX_COUNT=1
		((MAX_COUNT--))
		local -a marker=(
		'                           |                           '
		'                           |                           '
		'                           |                           '
		'                           |                           '
		'                           |                           '
		'                           |                           '
		'                           |                           '
		'                           |                           '

		)

		while (( $passes < $MAX_PASSES ))
		do
			if (( $mode == 0 )); then
				((count++))
				if (( $count >= $MAX_COUNT )); then
					count=$MAX_COUNT
					mode=1
					((passes++))
				fi
			elif (( $mode == 1 )); then
				((count--))
				if (( $count <= 0 )); then
					count=0
					mode=0
					((passes++))
				fi
			fi

			#color=$((228 + $count))
			color=93

			#echo -ne "${marker[$count]}\r"

			echo -ne "\e[38;5;${color}m ${marker[$count]}\r"
			#echo -e "\e[38;5;${color}m ${marker[$count]}\r"

			#echo -e "\e[38;5;154m ${marker[$count]}\r"

			#fSleep="0.0$count"
			local fSleep=0.03
			sleep "$fSleep"

		done

		unset marker

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	#Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	#----------------------------------------------------------------
	#Hide cursor
	tput civis
	#----------------------------------------------------------------
	# Run
	Funtime_"$INPUT"
	#----------------------------------------------------------------
	#Put colours back to normal
	echo -e "\e[0m"

	#Move a line down
	echo -e ""
	#----------------------------------------------------------------
	#enable cursor
	tput cnorm
	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}