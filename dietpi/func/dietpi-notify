#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Function:
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# -
	#
	# Usage:
	# - /DietPi/dietpi/func/dietpi-notify
	#////////////////////////////////////

	#Force en_GB Locale for whole script. Prevents incorrect parsing with non-english locales.
	LANG=en_GB.UTF-8

	#Ensure we are in users home dir: https://github.com/Fourdee/DietPi/issues/905#issuecomment-298223705
	cd "$HOME"

	aINPUT_STRING=("$@")

	#HEADER_LINE="\e[38;5;154m─────────────────────────────────────────────────────\e[0m"
	HEADER_LINE="\e[90m─────────────────────────────────────────────────────\e[0m"

	STATUS_TEXT_OK="\e[32mOk\e[0m"
	STATUS_TEXT_FAILED="\e[31mFailed:\e[0m"

	BRACKET_STRING_L="\e[90m[\e[0m"
	BRACKET_STRING_R="\e[90m]\e[0m"

	#Funcs

	Print_Ok(){

		echo -ne " $BRACKET_STRING_L\e[32mOk\e[0m$BRACKET_STRING_R"

	}

	Print_Failed(){

		echo -ne " $BRACKET_STRING_L\e[31mFailed\e[0m$BRACKET_STRING_R"

	}

	# - Print all input string on same line
	# - $1 = start printing from word number $1
	Print_Input_String(){

		for (( i=$1;i<${#aINPUT_STRING[@]} ;i++))
		do
			echo -ne " ${aINPUT_STRING[${i}]}"
		done

		echo -e ""

		# echo -e "SIZE = ${#aINPUT_STRING}"

		# aINPUT_STRING="$@"
		# for (( i=$1;i<${#aINPUT_STRING} ;i++))
		# do
			# echo -ne "${aINPUT_STRING:$i:1}"
			# sleep 0.02
		# done

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	#--------------------------------------------------------------------------------------
	#Exit code, print OK or Failed
	#$2 = exit code
	# - Use this at end of DietPi scripts, EG: /DietPi/dietpi/func/dietpi-notify -1 ${EXIT_CODE:=0}
	if (( $1 == -1 )); then

		if [ "$2" = "0" ]; then

			aINPUT_STRING+=("Completed")
			Print_Ok
			Print_Input_String 2
			echo -e ""

		else

			aINPUT_STRING+=("An issue has occured")
			Print_Failed
			Print_Input_String 2
			echo -e ""

		fi

	#--------------------------------------------------------------------------------------
	#Status Ok
	#$@ = txt desc
	elif (( $1 == 0 )); then

		Print_Ok
		Print_Input_String 1

	#Status failed
	#$@ = txt desc
	elif (( $1 == 1 )); then

		Print_Failed
		Print_Input_String 1

	#Status Info
	#$@ = txt desc
	elif (( $1 == 2 )); then

		echo -ne " $BRACKET_STRING_L\e[0mInfo\e[0m$BRACKET_STRING_R"
		echo -ne "\e[90m"
		Print_Input_String 1
		echo -ne "\e[0m"

	#DietPi banner style
	#$2 = txt program name
	#$3 = txt mode
	elif (( $1 == 3 )); then

		echo -e "\n \e[38;5;154m$2\e[0m"
		echo -e "$HEADER_LINE"
		echo -e " \e[90mMode:\e[0m$(Print_Input_String 2)"
		echo -e " \e[90mPlease wait...\e[0m\n"

	fi
	#-----------------------------------------------------------------------------------
	unset aINPUT_STRING
	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}
